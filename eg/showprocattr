#! /usr/bin/perl -w

use strict;
use BSD::Process;
use Getopt::Std;

getopts( 'n', \my %opt );

my @line;
my @width = (0) x (1 + @ARGV);

PROC:
for my $pid (sort {$a <=> $b} BSD::Process::list) {
    my $proc = BSD::Process->new($pid);
    my $id   = "$proc->{comm}($proc->{pid})";
    my @out  =
        map { defined $proc->{$_} ? $proc->{$_} : '' }
        @ARGV;

    if ($opt{n}) {
        my $keep = 0;
        for my $attr (@out) {
            if ($attr != 0) {
                $keep = 1;
                last;
            }
        }
        next PROC unless $keep;
    }

    if (@ARGV > 1) {
        for my $idx (0..$#ARGV) {
            $out[$idx] = "$ARGV[$idx]:$out[$idx]";
        }
    }

    unshift @out, $id;
    for my $idx (0..$#out) {
        $width[$idx] = length($out[$idx])
            if $width[$idx] < length($out[$idx]);
    }
    push @line, [@out];
}

my $fmt = join( ' ', map {'%' . -$_ . 's'} @width) . "\n";
for my $ln (@line) {
    printf $fmt, @$ln;
}
