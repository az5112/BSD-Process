# 02-method.t
# Method tests for BSD::Process
#
# Copyright (C) 2006 David Landgren

use strict;
use Test::More tests => 211;

use BSD::Process;

{
    my $pi = BSD::Process->new();   # implicit pid
    my $pe = BSD::Process->new($$); # explicit pid

    is( $pi->{pid}, $pe->{pid}, 'attribute pid' );
    is( $pi->{sid}, $pe->{sid}, 'attribute sid' );
    is( $pi->{tsid}, $pe->{tsid}, 'attribute tsid' );

    ok(defined($pe->{start}), 'attribute start (coalesced struct timeval)' );
    ok(defined($pe->{childtime}), 'attribute childtime (coalesced struct timeval)');

    is($pe->pid,       $pe->{pid},       'method pid' );
    is($pe->ppid,      $pe->{ppid},      'method ppid');
    is($pe->pgid,      $pe->{pgid},      'method pgid');
    is($pe->tpgid,     $pe->{tpgid},     'method tpgid');
    is($pe->sid,       $pe->{sid},       'method tpgid');
    is($pe->tsid,      $pe->{tsid},      'method tsid');
    is($pe->jobc,      $pe->{jobc},      'method jobc');
    is($pe->uid,       $pe->{uid},       'method uid');
    is($pe->ruid,      $pe->{ruid},      'method ruid');
    is($pe->svuid,     $pe->{svuid},     'method svuid');
    is($pe->rgid,      $pe->{rgid},      'method rgid');
    is($pe->svgid,     $pe->{svgid},     'method svgid');
    is($pe->ngroups,   $pe->{ngroups},   'method ngroups');
    is($pe->size,      $pe->{size},      'method size');
    is($pe->rssize,    $pe->{rssize},    'method rssize');
    is($pe->tsize,     $pe->{tsize},     'method tsize');
    is($pe->dsize,     $pe->{dsize},     'method dsize');
    is($pe->ssize,     $pe->{ssize},     'method ssize');
    is($pe->xstat,     $pe->{xstat},     'method xstat');
    is($pe->acflag,    $pe->{acflag},    'method acflag');
    is($pe->pctcpu,    $pe->{pctcpu},    'method pctcpu');
    is($pe->estcpu,    $pe->{estcpu},    'method estcpu');
    is($pe->slptime,   $pe->{slptime},   'method slptime');
    is($pe->swtime,    $pe->{swtime},    'method swtime');
    is($pe->runtime,   $pe->{runtime},   'method runtime');
    is($pe->xstat,     $pe->{xstat},     'method xstat');
    is($pe->childtime, $pe->{childtime}, 'method childtime');
    is($pe->flag,      $pe->{flag},      'method flag');
    is($pe->advlock,   $pe->{advlock},   'method advlock');
    is($pe->controlt,  $pe->{controlt},  'method controlt');
    is($pe->kthread,   $pe->{kthread},   'method kthread');
    is($pe->noload,    $pe->{noload},    'method noload');
    is($pe->ppwait,    $pe->{ppwait},    'method ppwait');
    is($pe->profil,    $pe->{profil},    'method profil');
    is($pe->stopprof,  $pe->{stopprof},  'method stopprof');
    is($pe->hadthreads, $pe->{hadthreads}, 'method hadthreads');
    is($pe->sugid,     $pe->{sugid},     'method sugid');
    is($pe->system,    $pe->{system},    'method system');
    is($pe->single_exit, $pe->{single_exit}, 'method single_exit');
    is($pe->traced,    $pe->{traced},    'method traced');
    is($pe->waited,    $pe->{waited},    'method waited');
    is($pe->wexit,     $pe->{wexit},     'method wexit');
    is($pe->exec,      $pe->{exec},      'method exec');
    is($pe->locked,    $pe->{locked},    'method locked');
    is($pe->isctty,    $pe->{isctty},    'method isctty');
    is($pe->issleader, $pe->{issleader}, 'method issleader');
    is($pe->stat,      $pe->{stat},      'method stat');
    is($pe->stat_1,    $pe->{stat_1},    'method stat_1');
    is($pe->stat_2,    $pe->{stat_2},    'method stat_2');
    is($pe->stat_3,    $pe->{stat_3},    'method stat_3');
    is($pe->stat_4,    $pe->{stat_4},    'method stat_4');
    is($pe->stat_5,    $pe->{stat_5},    'method stat_5');
    is($pe->stat_6,    $pe->{stat_6},    'method stat_6');
    is($pe->stat_7,    $pe->{stat_7},    'method stat_7');
    is($pe->nice,      $pe->{nice},      'method nice');
    is($pe->lock,      $pe->{lock},      'method lock');
    is($pe->rqindex,   $pe->{rqindex},   'method rqindex');
    is($pe->oncpu,     $pe->{oncpu},     'method oncpu');
    is($pe->lastcpu,   $pe->{lastcpu},   'method lastcpu');
    is($pe->ocomm,     $pe->{ocomm},     'method ocomm');
    is($pe->wmesg,     $pe->{wmesg},     'method wmesg');
    is($pe->login,     $pe->{login},     'method login');
    is($pe->lockname,  $pe->{lockname},  'method lockname');
    is($pe->comm,      $pe->{comm},      'method comm');
    is($pe->jid,       $pe->{jid},       'method jid');
    is($pe->numthreads, $pe->{numthreads}, 'method numthreads');
    is($pe->pri_class,  $pe->{pri_class},  'method pri_class');
    is($pe->pri_level,  $pe->{pri_level},  'method pri_level');
    is($pe->pri_native, $pe->{pri_native}, 'method pri_native');
    is($pe->pri_user,   $pe->{pri_user},   'method pri_user');
    is($pe->utime,      $pe->{utime},      'method utime');
    is($pe->stime,      $pe->{stime},      'method stime');
    is($pe->maxrss,     $pe->{maxrss},     'method maxrss');
    is($pe->ixrss,      $pe->{ixrss},      'method ixrss');
    is($pe->idrss,      $pe->{idrss},      'method idrss');
    is($pe->isrss,      $pe->{isrss},      'method isrss');
    is($pe->minflt,     $pe->{minflt},     'method minflt');
    is($pe->majflt,     $pe->{majflt},     'method majflt');
    is($pe->nswap,      $pe->{nswap},      'method nswap');
    is($pe->inblock,    $pe->{inblock},    'method inblock');
    is($pe->oublock,    $pe->{oublock},    'method oublock');
    is($pe->msgsnd,     $pe->{msgsnd},     'method msgsnd');
    is($pe->msgrcv,     $pe->{msgrcv},     'method msgrcv');
    is($pe->nsignals,   $pe->{nsignals},   'method nsignals');
    is($pe->nvcsw,      $pe->{nvcsw},      'method nvcsw');
    is($pe->nivcsw,     $pe->{nivcsw},     'method nivcsw');
    is($pe->utime_ch,    $pe->{utime_ch},    'method utime');
    is($pe->stime_ch,    $pe->{stime_ch},    'method stime');
    is($pe->maxrss_ch,   $pe->{maxrss_ch},   'method maxrss');
    is($pe->ixrss_ch,    $pe->{ixrss_ch},    'method ixrss');
    is($pe->idrss_ch,    $pe->{idrss_ch},    'method idrss');
    is($pe->isrss_ch,    $pe->{isrss_ch},    'method isrss');
    is($pe->minflt_ch,   $pe->{minflt_ch},   'method minflt');
    is($pe->majflt_ch,   $pe->{majflt_ch},   'method majflt');
    is($pe->nswap_ch,    $pe->{nswap_ch},    'method nswap');
    is($pe->inblock_ch,  $pe->{inblock_ch},  'method inblock');
    is($pe->oublock_ch,  $pe->{oublock_ch},  'method oublock');
    is($pe->msgsnd_ch,   $pe->{msgsnd_ch},   'method msgsnd');
    is($pe->msgrcv_ch,   $pe->{msgrcv_ch},   'method msgrcv');
    is($pe->nsignals_ch, $pe->{nsignals_ch}, 'method nsignals');
    is($pe->nvcsw_ch,    $pe->{nvcsw_ch},    'method nvcsw');
    is($pe->nivcsw_ch,   $pe->{nivcsw_ch},   'method nivcsw');

    # longhand method names
    is($pe->process_pid,                   $pe->{pid},         'alias process_pid' );
    is($pe->parent_pid,                    $pe->{ppid},        'alias parent_pid');
    is($pe->process_group_id,              $pe->{pgid},        'alias process_group_id');
    is($pe->tty_process_group_id,          $pe->{tpgid},       'alias tty_process_group_id');
    is($pe->process_session_id,            $pe->{sid},         'alias tty_process_group_id');
    is($pe->terminal_session_id,           $pe->{tsid},        'alias terminal_session_id');
    is($pe->job_control_counter,           $pe->{jobc},        'alias job_control_counter');
    is($pe->effective_user_id,             $pe->{uid},         'alias effective_user_id');
    is($pe->real_user_id,                  $pe->{ruid},        'alias real_user_id');
    is($pe->saved_effective_user_id,       $pe->{svuid},       'alias saved_effective_user_id');
    is($pe->real_group_id,                 $pe->{rgid},        'alias real_group_id');
    is($pe->saved_effective_group_id,      $pe->{svgid},       'alias saved_effective_group_id');
    is($pe->number_of_groups,              $pe->{ngroups},     'alias number_of_groups');
    is($pe->virtual_size,                  $pe->{size},        'alias virtual_size');
    is($pe->resident_set_size,             $pe->{rssize},      'alias resident_set_size');
    is($pe->text_size,                     $pe->{tsize},       'alias text_size');
    is($pe->data_size,                     $pe->{dsize},       'alias data_size');
    is($pe->stack_size,                    $pe->{ssize},       'alias stack_size');
    is($pe->exit_status,                   $pe->{xstat},       'alias exit_status');
    is($pe->accounting_flags,              $pe->{acflag},      'alias accounting_flags');
    is($pe->percent_cpu,                   $pe->{pctcpu},      'alias percent_cpu');
    is($pe->estimated_cpu,                 $pe->{estcpu},      'alias estimated_cpu');
    is($pe->sleep_time,                    $pe->{slptime},     'alias sleep_time');
    is($pe->time_last_swap,                $pe->{swtime},      'alias time_last_swap');
    is($pe->elapsed_time,                  $pe->{runtime},     'alias elapsed_time');
    is($pe->exit_status,                   $pe->{xstat},       'alias exit_status');
    is($pe->children_time,                 $pe->{childtime},   'alias children_time');
    is($pe->process_flags,                 $pe->{flag},        'alias process_flags');
    is($pe->posix_advisory_lock,           $pe->{advlock},     'alias posix_advisory_lock');
    is($pe->has_controlling_terminal,      $pe->{controlt},    'alias has_controlling_terminal');
    is($pe->is_kernel_thread,              $pe->{kthread},     'alias is_kernel_thread');
    is($pe->no_loadavg_calc,               $pe->{noload},      'alias no_loadavg_calc');
    is($pe->parent_waiting,                $pe->{ppwait},      'alias parent_waiting');
    is($pe->started_profiling,             $pe->{profil},      'alias started_profiling');
    is($pe->stopped_profiling,             $pe->{stopprof},    'alias stopped_profiling');
    is($pe->process_had_threads,           $pe->{hadthreads},  'alias process_had_threads');
    is($pe->id_privs_set,                  $pe->{sugid},       'alias id_privs_set');
    is($pe->system_process,                $pe->{system},      'alias system_process');
    is($pe->single_exit_not_wait,          $pe->{single_exit}, 'alias single_exit_not_wait');
    is($pe->traced_by_debugger,            $pe->{traced},      'alias traced_by_debugger');
    is($pe->waited_on_by_other,            $pe->{waited},      'alias waited_on_by_other');
    is($pe->working_on_exiting,            $pe->{wexit},       'alias working_on_exiting');
    is($pe->process_called_exec,           $pe->{exec},        'alias process_called_exec');
    is($pe->is_locked,                     $pe->{locked},      'alias is_locked');
    is($pe->controlling_tty_active,        $pe->{isctty},      'alias controlling_tty_active');
    is($pe->is_session_leader,             $pe->{issleader},   'alias is_session_leader');
    is($pe->process_status,                $pe->{stat},        'alias process_status');
    is($pe->is_being_forked,               $pe->{stat_1},      'alias is_being_forked');
    is($pe->is_runnable,                   $pe->{stat_2},      'alias is_runnable');
    is($pe->is_sleeping_on_addr,           $pe->{stat_3},      'alias is_sleeping_on_addr');
    is($pe->is_stopped,                    $pe->{stat_4},      'alias is_stopped');
    is($pe->is_a_zombie,                   $pe->{stat_5},      'alias is_a_zombie');
    is($pe->is_waiting_on_intr,            $pe->{stat_6},      'alias is_waiting_on_intr');
    is($pe->is_blocked,                    $pe->{stat_7},      'alias is_blocked');
    is($pe->nice_priority,                 $pe->{nice},        'alias nice_priority');
    is($pe->process_lock_count,            $pe->{lock},        'alias process_lock_count');
    is($pe->run_queue_index,               $pe->{rqindex},     'alias run_queue_index');
    is($pe->current_cpu,                   $pe->{oncpu},       'alias current_cpu');
    is($pe->last_cpu,                      $pe->{lastcpu},     'alias last_cpu');
    is($pe->old_command_name,              $pe->{ocomm},       'alias old_command_name');
    is($pe->wchan_message,                 $pe->{wmesg},       'alias wchan_message');
    is($pe->setlogin_name,                 $pe->{login},       'alias setlogin_name');
    is($pe->name_of_lock,                  $pe->{lockname},    'alias name_of_lock');
    is($pe->command_name,                  $pe->{comm},        'alias command_name');
    is($pe->process_jail_id,               $pe->{jid},         'alias process_jail_id');
    is($pe->number_of_threads,             $pe->{numthreads},  'alias number_of_threads');
    is($pe->priority_scheduling_class,     $pe->{pri_class},   'alias priority_scheduling_class');
    is($pe->priority_level,                $pe->{pri_level},   'alias priority_level');
    is($pe->priority_native,               $pe->{pri_native},  'alias priority_native');
    is($pe->priority_user,                 $pe->{pri_user},    'alias priority_user');
    is($pe->user_time,                     $pe->{utime},       'alias user_time');
    is($pe->system_time,                   $pe->{stime},       'alias system_time');
    is($pe->max_resident_set_size,         $pe->{maxrss},      'alias max_resident_set_size');
    is($pe->shared_memory_size,            $pe->{ixrss},       'alias shared_memory_size');
    is($pe->unshared_data_size,            $pe->{idrss},       'alias unshared_data_size');
    is($pe->unshared_stack_size,           $pe->{isrss},       'alias unshared_stack_size');
    is($pe->page_reclaims,                 $pe->{minflt},      'alias page_reclaims');
    is($pe->page_faults,                   $pe->{majflt},      'alias page_faults');
    is($pe->number_of_swaps,               $pe->{nswap},       'alias number_of_swaps');
    is($pe->block_input_ops,               $pe->{inblock},     'alias block_input_ops');
    is($pe->block_output_ops,              $pe->{oublock},     'alias block_output_ops');
    is($pe->messages_sent,                 $pe->{msgsnd},      'alias messages_sent');
    is($pe->messages_received,             $pe->{msgrcv},      'alias messages_received');
    is($pe->signals_received,              $pe->{nsignals},    'alias signals_received');
    is($pe->voluntary_context_switch,      $pe->{nvcsw},       'alias voluntary_context_switch');
    is($pe->involuntary_context_switch,    $pe->{nivcsw},      'alias involuntary_context_switch');
    is($pe->user_time_ch,                  $pe->{utime_ch},    'alias user_time');
    is($pe->system_time_ch,                $pe->{stime_ch},    'alias system_time');
    is($pe->max_resident_set_size_ch,      $pe->{maxrss_ch},   'alias max_resident_set_size');
    is($pe->shared_memory_size_ch,         $pe->{ixrss_ch},    'alias shared_memory_size');
    is($pe->unshared_data_size_ch,         $pe->{idrss_ch},    'alias unshared_data_size');
    is($pe->unshared_stack_size_ch,        $pe->{isrss_ch},    'alias unshared_stack_size');
    is($pe->page_reclaims_ch,              $pe->{minflt_ch},   'alias page_reclaims');
    is($pe->page_faults_ch,                $pe->{majflt_ch},   'alias page_faults');
    is($pe->number_of_swaps_ch,            $pe->{nswap_ch},    'alias number_of_swaps');
    is($pe->block_input_ops_ch,            $pe->{inblock_ch},  'alias block_input_ops');
    is($pe->block_output_ops_ch,           $pe->{oublock_ch},  'alias block_output_ops');
    is($pe->messages_sent_ch,              $pe->{msgsnd_ch},   'alias messages_sent');
    is($pe->messages_received_ch,          $pe->{msgrcv_ch},   'alias messages_received');
    is($pe->signals_received_ch,           $pe->{nsignals_ch}, 'alias signals_received');
    is($pe->voluntary_context_switch_ch,   $pe->{nvcsw_ch},    'alias voluntary_context_switch');
    is($pe->involuntary_context_switch_ch, $pe->{nivcsw_ch},   'alias involuntary_context_switch');

    my $time = $pi->runtime;
    $pi->refresh;
    cmp_ok($pi->{start}, '<', time+1, 'attribute start');
    cmp_ok( $pi->runtime, '>', $time, 'refresh updates counters' );
}
